@page "/"
@using BaseApp
@using BISS.Apps.Connectivity.Blazor
@using BISS.Apps.Connectivity.Dc
@using Biss.Dc.Client.Web
@inject IJSRuntime JS;


<div style="text-align: center; color: white; background-color: #163072; margin:25px;">
    <div style="padding-top:50px;">
        <div style="margin: 40px;">
            <img src="/content/Loewe_weiß.png" style="max-width: 100%; width: 200px;"/>
        </div>
        <div style="margin: 20px;">
            <p>Applikation wird gestartet ...</p>
        </div>
        <div style="margin: 20px;padding-bottom:50px;">
            <div class="spinner-border text-primary" role="status"></div>
        </div>
    </div>
</div>

@code {

    /// <summary>
    /// Method invoked when the component is ready to start, having received its
    /// initial parameters from its parent in the render tree.
    /// Override this method if you will perform an asynchronous operation and
    /// want the component to refresh when that operation is completed.
    /// </summary>
    /// <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing any asynchronous operation.</returns>
    protected override async Task OnInitializedAsync()
    {
        await this.BissUseConnectivity(JS);
    }

    /// <summary>
    /// Method invoked after each time the component has been rendered. Note that the component does
    /// not automatically re-render after the completion of any returned <see cref="T:System.Threading.Tasks.Task" />, because
    /// that would cause an infinite render loop.
    /// </summary>
    /// <param name="firstRender">
    /// Set to <c>true</c> if this is the first time <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)" /> has been invoked
    /// on this component instance; otherwise <c>false</c>.
    /// </param>
    /// <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing any asynchronous operation.</returns>
    /// <remarks>
    /// The <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean)" /> and <see cref="M:Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean)" /> lifecycle methods
    /// are useful for performing interop, or interacting with values received from <c>@ref</c>.
    /// Use the <paramref name="firstRender" /> parameter to ensure that initialization work is only performed
    /// once.
    /// </remarks>
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            VmProjectBase.LaunchFirstView();
        }
        return base.OnAfterRenderAsync(firstRender);
    }
}
