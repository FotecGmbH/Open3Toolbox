@using Exchange.Resources.ResConfigurationTool

<div class="m-3">
    <div class="form-group">
        @{Action<ChangeEventArgs> action = e => this.selected = e.Value as string;}
        <select class="form-control" @onchange="action">
            @foreach (var key in this.Keys)
            {
                @if (key == this.selected)
                {
                    <option selected value="@key">@key</option>
                    continue;
                }

                <option value="@key">@key</option>
            }
        </select>
    </div>
    <div class="d-flex justify-content-between">
        <button class="btn btn-success" @onclick="() => this.DialogService.Close(selected)">@ResViewCommon.PromptChoice_Ok</button>
        <button class="btn btn-danger" @onclick="() => this.DialogService.Close(null)">@ResViewCommon.PromptChoice_Cancel</button>
    </div>
</div>

@code {
    private string selected;

    [Parameter]
    public List<string> Keys { get; set; }

    [Parameter]
    public DialogService DialogService { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        this.selected = this.Keys.FirstOrDefault();
    }
}
